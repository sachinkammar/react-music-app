{"version":3,"sources":["components/Home/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","state","favouriteSongs","name","cover","newReleaseSongs","_this$state","params","slidesPerView","centeredSlides","loop","spaceBetween","shouldSwiperUpdate","freeMode","navigation","nextEl","prevEl","renderPrevButton","react_default","a","createElement","className","style","display","href","renderNextButton","params1","effect","lib_default","map","song","index","key","src","alt","slice","reverse","Component","Navbar","react_router_dom","activeClassName","to","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","transform","App","react_router","exact","path","component","components_Navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cd3029b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Home.css';\nimport Swiper from 'react-id-swiper';\nimport 'react-id-swiper/lib/styles/css/swiper.css';\nimport '../../assets/fonts/gotham-rounded/style.css'\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favouriteSongs : [\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\"},\n        {\"name\":\"Fuck You\",\"cover\":\"./img/covers/id-5.png\"},\n        {\"name\":\"Great Work\",\"cover\":\"./img/covers/id-7.png\"},\n        {\"name\":\"Burn It Slow\",\"cover\":\"./img/covers/id-8.jpg\"},\n        {\"name\":\"Still You\",\"cover\":\"./img/covers/id-9.png\"},\n        {\"name\":\"Let Me Down\",\"cover\":\"./img/covers/id-10.png\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"}\n      ],\n      newReleaseSongs: [\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-5.png\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-7.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-8.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-9.png\"},\n        {\"name\":\"Smash It!\",\"cover\":\"./img/covers/id-10.png\"},\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\"}\n      ]\n    }\n  }\n  componentDidMount=()=>{\n  }\n  render() {\n    const {favouriteSongs, newReleaseSongs} = this.state;\n    const params = {\n      slidesPerView: '3',\n      centeredSlides: false,\n      loop: false,\n      spaceBetween: 70,\n      shouldSwiperUpdate: true,\n      freeMode: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    const params1 = {\n      slidesPerView: '2',\n      centeredSlides: false,\n      effect: 'slide',\n      loop: false,\n      spaceBetween: 20,\n      shouldSwiperUpdate: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    return (\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"body-wrapper\">\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Your Favorite</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { favouriteSongs.map((song,index)=>{\n                      return (\n                        <div  key={index+1}>\n                          <div className=\"section-body-card\">\n                            <img src={song.cover} alt=\"song\"/>\n                          </div>\n                          <span className=\"section-body-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>New Release</p>\n                  {/* <span>View all</span> */}\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params1}>\n                    { newReleaseSongs.map((song,index)=>{\n                      return (\n                        <div className=\"section-body-large-card\" key={index+2}>\n                          <img src={song.cover} alt=\"song\" />\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Trending</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                      return (\n                        <div  key={index+3}>\n                          <div className=\"section-body-card\">\n                            <img src={song.cover} alt=\"song\"/>\n                          </div>\n                          <span className=\"section-body-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Popular Artists</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                      return (\n                        <div key={index+4}>\n                          <div className=\"section-body-round-card\">\n                            <img src={song.cover} alt=\"song\"/>\n                          </div>\n                          <span className=\"section-body-round-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n","import React, { Component } from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Navbar.css';\n\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  componentDidMount=()=>{\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"col-sm-12\">\n          <div className=\"row\">\n            <div className=\"app-navbar-bottom-fixed\">\n              <div className=\"app-navbar\">\n                <NavLink activeClassName=\"selected-app-navbar-element\" to=\"/home\" className=\"navbar-navlink\">\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-music\"\n                      >\n                        <path d=\"M9 18V5l12-2v13\" />\n                        <circle cx={6} cy={18} r={3} />\n                        <circle cx={18} cy={16} r={3} />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Home</span>\n                    </div>\n                  </div>\n                </NavLink>\n                <NavLink activeClassName=\"selected-app-navbar-element\" to=\"/favourite\" className=\"navbar-navlink\">\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-heart\"\n                      >\n                        <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Favourite</span>\n                    </div>\n                  </div>\n                </NavLink>\n                <NavLink activeClassName=\"selected-app-navbar-element\" to=\"/player\" className=\"navbar-navlink\">\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-triangle\"\n                        style={{transform: 'rotate(90deg)'}}\n                      >\n                        <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\" />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Player</span>\n                    </div>\n                  </div>\n                </NavLink>\n                <NavLink activeClassName=\"selected-app-navbar-element\" to=\"/settings\" className=\"navbar-navlink\">\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-settings\"\n                      >\n                        <circle cx={12} cy={12} r={3} />\n                        <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Settings</span>\n                    </div>\n                  </div>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n\n","import React, { Component } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\nimport Home from './components/Home'\nimport Navbar from './components/Navbar'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <div className=\"sidebar-menu\">\n            <span>\n              <svg\n                height=\"50px\"\n                width=\"50px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 188.7 123\"\n                className=\"sidebar-menu-icon\"\n              >\n                <path\n                  d=\"M133.9,38.3H54.8c-3,0-5.4-2.4-5.4-5.4v0c0-3,2.4-5.4,5.4-5.4l79.1,0c3,0,5.4,2.4,5.4,5.4v0  C139.4,35.9,136.9,38.3,133.9,38.3z\"\n                />\n                <path\n                  d=\"M93.1,66.5H54.8c-3,0-5.4-2.4-5.4-5.4v0c0-3,2.4-5.4,5.4-5.4h38.3c3,0,5.4,2.4,5.4,5.4v0  C98.6,64,96.2,66.5,93.1,66.5z\"\n                />\n                <path\n                  d=\"M113.1,94.3H54.8c-3,0-5.4-2.4-5.4-5.4v0c0-3,2.4-5.4,5.4-5.4h58.2c3,0,5.4,2.4,5.4,5.4v0  C118.5,91.9,116.1,94.3,113.1,94.3z\"\n                />\n              </svg>\n            </span>\n            <span>Home</span>\n          </div>\n        </div>\n        <Route>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/:section\" component={Home} />\n          </Switch>\n        </Route>\n        <Navbar />\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}