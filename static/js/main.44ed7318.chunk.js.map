{"version":3,"sources":["components/Home/index.js","components/Browse/index.js","components/Navbar/index.js","components/Playlists/index.js","components/TrackList/index.js","components/Player/RangeSlider.js","components/Player/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","goToPlayer","props","history","push","goToTrackList","state","favouriteSongs","name","cover","newReleaseSongs","_this2","_this$state","params","slidesPerView","centeredSlides","loop","lazy","spaceBetween","shouldSwiperUpdate","freeMode","navigation","nextEl","prevEl","renderPrevButton","react_default","a","createElement","className","style","display","href","renderNextButton","params1","effect","lib_default","map","song","index","key","onClick","src","alt","assign","minWidth","slice","reverse","Component","Browse","composedBy","time","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","type","placeholder","color","fontSize","length","d","Navbar","react_router_dom","activeClassName","to","Playlists","points","TrackList","animation","Handle","_ref2","_ref2$domain","slicedToArray","domain","min","max","_ref2$handle","handle","id","value","percent","disabled","getHandleProps","react","left","concat","position","transform","WebkitTapHighlightColor","zIndex","cursor","backgroundColor","role","aria-valuemin","aria-valuemax","aria-valuenow","borderRadius","boxShadow","defaultProps","swiper","defaultValues","Player","handleSongLoad","loaded","console","log","setAutoPlay","togglePlay","playStatus","Sound","status","PLAYING","setState","PAUSED","forward","backward","setPosition","values","getSwiper","mySwiper","activeIndex","STOPPED","slideMove","slideNext","update","activeSlideKey","elapsed","total","playFromPosition","actualPosition","audio","formatMilliseconds","duration","milliseconds","Math","floor","minutes","seconds","on","init","slideChange","touchEnd","containerClass","slideClass","slideActiveClass","watchOverflow","rebuildOnUpdate","onChange","abc","react_sound_lib_default","url","autoLoad","onPlaying","handleSongPlaying","bind","onFinishedPlaying","handleSongFinished","onLoad","margin","es","step","onUpdate","defaultValue","trackStyle","handleStyle","border","marginRight","x","y","App","toggleTheme","nightTheme","document","body","removeAttribute","setAttribute","react_router","exact","path","component","components_Navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44ed7318.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Home.css';\nimport Swiper from 'react-id-swiper';\nimport 'react-id-swiper/lib/styles/css/swiper.css';\nimport '../../assets/fonts/gotham-rounded/style.css'\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favouriteSongs : [\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\"},\n        {\"name\":\"Fuck You\",\"cover\":\"./img/covers/id-5.png\"},\n        {\"name\":\"Great Work\",\"cover\":\"./img/covers/id-7.png\"},\n        {\"name\":\"Burn It Slow\",\"cover\":\"./img/covers/id-8.jpg\"},\n        {\"name\":\"Still You\",\"cover\":\"./img/covers/id-9.png\"},\n        {\"name\":\"Let Me Down\",\"cover\":\"./img/covers/id-10.png\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"}\n      ],\n      newReleaseSongs: [\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-5.png\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-7.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-8.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-9.png\"},\n        {\"name\":\"Smash It!\",\"cover\":\"./img/covers/id-10.png\"},\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\"}\n      ]\n    }\n  }\n  componentDidMount=()=>{\n  }\n  goToPlayer=()=>{\n    this.props.history.push('/player')\n  }\n  goToTrackList=()=>{\n    this.props.history.push('/track-list')\n  }\n  \n  render() {\n    const {favouriteSongs, newReleaseSongs} = this.state;\n    const params = {\n      slidesPerView: '3',\n      centeredSlides: false,\n      loop: false,\n      lazy: true,\n      spaceBetween: 70,\n      shouldSwiperUpdate: true,\n      freeMode: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    const params1 = {\n      slidesPerView: '2',\n      centeredSlides: false,\n      effect: 'slide',\n      lazy: true,\n      loop: false,\n      spaceBetween: 20,\n      shouldSwiperUpdate: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    return (\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"body-wrapper delay-page-load\">\n              <div className=\"section-wrap\">\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>New Releases</p>\n                  {/* <span>View all</span> */}\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params1}>\n                    { newReleaseSongs.map((song,index)=>{\n                      return (\n                        <div className=\"section-body-large-card\" key={index+2} onClick={this.goToPlayer}>\n                          <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n                <div className=\"section-header\">\n                  <p>Your Favorites</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params} style={{minWidth:150}}>\n                    { favouriteSongs.map((song,index)=>{\n                      return (\n                        <div  key={index+1} onClick={this.goToPlayer}>\n                          <div className=\"section-body-card\">\n                            <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                          </div>\n                          <span className=\"section-body-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />              \n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Trending</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                      return (\n                        <div  key={index+3} onClick={this.goToPlayer}>\n                          <div className=\"section-body-card\">\n                            <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                          </div>\n                          <span className=\"section-body-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Popular Artists</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                      return (\n                        <div key={index+4} onClick={this.goToTrackList}>\n                          <div className=\"section-body-round-card\">\n                            <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                          </div>\n                          <span className=\"section-body-round-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Top 50</p>\n                  {/* <span>View all</span> */}\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params1}>\n                    { newReleaseSongs.slice(0).reverse().map((song,index)=>{\n                      return (\n                        <div className=\"section-body-large-card\" key={index+2} onClick={this.goToPlayer}>\n                          <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Most Played</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { newReleaseSongs.map((song,index)=>{\n                      return (\n                        <div  key={index+3} onClick={this.goToPlayer}>\n                          <div className=\"section-body-card\">\n                            <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                          </div>\n                          <span className=\"section-body-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div><br />\n\n              <div className=\"section-wrap\">\n                <div className=\"section-header\">\n                  <p>Your Favorites</p>\n                  <span>View all</span>\n                </div>\n                <div className=\"section-body\">\n                  <Swiper {...params}>\n                    { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                      return (\n                        <div  key={index+1} onClick={this.goToPlayer}>\n                          <div className=\"section-body-card\">\n                            <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                          </div>\n                          <span className=\"section-body-card-title\">{song.name}</span>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n","import React, { Component } from \"react\";\nimport './Browse.css';\nimport Swiper from 'react-id-swiper';\nimport 'react-id-swiper/lib/styles/css/swiper.css';\nimport '../../assets/fonts/gotham-rounded/style.css'\nclass Browse extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favouriteSongs : [\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\",\"composedBy\":\"Imagine Dragons\",\"time\":\"3:30\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\",\"composedBy\":\"Jonas Brothers\",\"time\":\"3:49\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\",\"composedBy\":\"Alan Walker\",\"time\":\"4:22\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\",\"composedBy\":\"The chainsmokers\",\"time\":\"4:50\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\",\"composedBy\":\"Justin Bieber, The chainsmokers\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\",\"composedBy\":\"Moroon 5\",\"time\":\"2:18\"},\n        {\"name\":\"Fuck You\",\"cover\":\"./img/covers/id-5.png\",\"composedBy\":\"Cardi B, Selena Gomez, Ozuna\",\"time\":\"5:29\"},\n        {\"name\":\"Great Work\",\"cover\":\"./img/covers/id-7.png\",\"composedBy\":\"Ava Max\",\"time\":\"4:50\"},\n        {\"name\":\"Burn It Slow\",\"cover\":\"./img/covers/id-8.jpg\",\"composedBy\":\"Ed Sheeran & Bieber's\",\"time\":\"3:49\"},\n        {\"name\":\"Still You\",\"cover\":\"./img/covers/id-9.png\",\"composedBy\":\"Alan Walker\",\"time\":\"4:22\"},\n        {\"name\":\"Let Me Down\",\"cover\":\"./img/covers/id-10.png\",\"composedBy\":\"Ariana Grande\",\"time\":\"2:18\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"}\n      ],\n      newReleaseSongs: [\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-5.png\",\"composedBy\":\"Jonas Brothers\",\"time\":\"4:22\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-7.png\",\"time\":\"2:18\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-8.jpg\",\"composedBy\":\"Alan Walker\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-9.png\",\"composedBy\":\"The chainsmokers\",\"time\":\"3:49\"},\n        {\"name\":\"Smash It!\",\"cover\":\"./img/covers/id-10.png\",\"composedBy\":\"Justin Bieber, The chainsmokers\",\"time\":\"4:50\"},\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\",\"composedBy\":\"Moroon 5\",\"time\":\"4:19\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\",\"composedBy\":\"Cardi B, Selena Gomez, Ozuna\",\"time\":\"3:49\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\",\"composedBy\":\"Ed Sheeran & Bieber's\",\"time\":\"5:29\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\",\"composedBy\":\"Ava Max\",\"time\":\"4:50\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\",\"composedBy\":\"Ariana Grande\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\",\"composedBy\":\"Bebe Rexha\",\"time\":\"4:22\"}\n      ]\n    }\n  }\n  componentDidMount=()=>{\n  }\n  goToPlayer=()=>{\n    this.props.history.push('/player')\n  }\n  goToTrackList=()=>{\n    this.props.history.push('/track-list')\n  }\n\n  render() {\n    const {favouriteSongs, newReleaseSongs} = this.state;\n    const params = {\n      slidesPerView: '3',\n      centeredSlides: false,\n      loop: false,\n      lazy: true,\n      spaceBetween: 70,\n      shouldSwiperUpdate: true,\n      freeMode: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    const params1 = {\n      slidesPerView: '2',\n      centeredSlides: false,\n      effect: 'slide',\n      loop: false,\n      lazy: true,\n      spaceBetween: 20,\n      shouldSwiperUpdate: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    return (\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"body-wrapper delay-page-load\">\n              <div className=\"browse-header\">\n                <h3>Browse</h3>\n              </div>\n              <div className=\"bowse-body\">\n                <div className=\"searchbar\">\n                  <span className=\"search_icon\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={22}\n                      height={22}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-search search_icon\"\n                    >\n                      <circle cx={11} cy={11} r={8} />\n                      <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n                    </svg>\n                  </span>\n                  <input\n                    className=\"search_input\"\n                    type=\"text\"\n                    name=\"browseSearch\"\n                    placeholder=\"Search in store..\"\n                  />\n                </div>\n                <div className=\"browse-body-hot-songs\">\n                  <div className=\"browse-body-hot-songs-title\">\n                    <span>Hot Songs</span>\n                    <span style={{color:'#e78783',fontSize:14}}>See All</span>\n                  </div>\n                  <div className=\"browse-body-hot-songs-box\">\n                    {favouriteSongs.length>0 && favouriteSongs.slice(0,3).map((song,index)=>{\n                      return(<div className=\"browse-body-hot-song-wrap\" key={index}  onClick={this.goToPlayer}>\n                        <div className=\"browse-body-hot-song-body-img\">\n                          <img src={song.cover} alt={song.name} />\n                        </div>\n                        <div className=\"browse-body-hot-song-body\">\n                          <div>\n                            <p>\n                              {song.name}\n                            </p>\n                            <span>\n                              {song.composedBy}\n                            </span>\n                          </div>\n                          <p className=\"browse-body-hot-song-body-song-time\">\n                            {song.time}\n                          </p>\n                        </div>\n                      </div>)\n                    })}\n                  </div>\n                </div><br />\n                <div className=\"section-wrap\">\n                  <div className=\"section-header\">\n                    <p>Popular Artists</p>\n                    <span>View all</span>\n                  </div>\n                  <div className=\"section-body\">\n                    <Swiper {...params}>\n                      { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                        return (\n                          <div  key={index+1}  onClick={this.goToTrackList}>\n                            <div className=\"section-body-card section-body-list-card\">\n                              <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                              <div className=\"section-body-card-overly\">\n                                <p>{song.name}</p>\n                                <span>\n                                  <svg \n                                    xmlns=\"http://www.w3.org/2000/svg\" \n                                    width={16} \n                                    height={16} \n                                    viewBox=\"0 0 24 18\" \n                                    fill=\"none\" \n                                    stroke=\"currentColor\" \n                                    strokeWidth={2} \n                                    strokeLinecap=\"round\" \n                                    strokeLinejoin=\"round\" \n                                    className=\"feather feather-heart\"\n                                  >\n                                    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                                  </svg>\n                                </span>\n                                <span> 250K</span>\n                              </div>\n                            </div>\n                          </div>\n                        )})\n                      }\n                    </Swiper>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Browse;\n\n","import React, { Component } from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Navbar.css';\n\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  componentDidMount=()=>{\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"col-sm-12\">\n          <div className=\"row\">\n            <div className=\"app-navbar-bottom-fixed\">\n              <div className=\"app-navbar\">\n                <NavLink\n                  activeClassName=\"selected-app-navbar-element\"\n                  to=\"/home\"\n                  className=\"navbar-navlink\"\n                >\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-music\"\n                      >\n                        <path d=\"M9 18V5l12-2v13\" />\n                        <circle cx={6} cy={18} r={3} />\n                        <circle cx={18} cy={16} r={3} />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Home</span>\n                    </div>\n                  </div>\n                </NavLink>\n                <NavLink\n                  activeClassName=\"selected-app-navbar-element\"\n                  to=\"/favourite\"\n                  className=\"navbar-navlink\"\n                >\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-heart\"\n                      >\n                        <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Favourite</span>\n                    </div>\n                  </div>\n                </NavLink>\n                {/* <NavLink activeClassName=\"selected-app-navbar-element\" to=\"/player\" className=\"navbar-navlink\">\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-triangle\"\n                        style={{transform: 'rotate(90deg)'}}\n                      >\n                        <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\" />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Player</span>\n                    </div>\n                  </div>\n                </NavLink> */}\n                <NavLink\n                  activeClassName=\"selected-app-navbar-element\"\n                  to=\"/playlists\"\n                  className=\"navbar-navlink\"\n                >\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-folder-plus\"\n                      >\n                        <path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\" />\n                        <line x1={12} y1={11} x2={12} y2={17} />\n                        <line x1={9} y1={14} x2={15} y2={14} />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Playlists</span>\n                    </div>\n                  </div>\n                </NavLink>\n                <NavLink\n                  activeClassName=\"selected-app-navbar-element\"\n                  to=\"/track-list\"\n                  className=\"navbar-navlink\"\n                >\n                  <div className=\"app-navbar-element\">\n                    <span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-settings\"\n                      >\n                        <circle cx={12} cy={12} r={3} />\n                        <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n                      </svg>\n                    </span>\n                    <div>\n                      <span>Settings</span>\n                    </div>\n                  </div>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n\n","import React, { Component } from \"react\";\nimport './Playlists.css';\nimport Swiper from 'react-id-swiper';\nimport 'react-id-swiper/lib/styles/css/swiper.css';\nimport '../../assets/fonts/gotham-rounded/style.css'\nclass Playlists extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favouriteSongs : [\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\",\"composedBy\":\"Imagine Dragons\",\"time\":\"3:30\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\",\"composedBy\":\"Jonas Brothers\",\"time\":\"3:49\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\",\"composedBy\":\"Alan Walker\",\"time\":\"4:22\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\",\"composedBy\":\"The chainsmokers\",\"time\":\"4:50\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\",\"composedBy\":\"Justin Bieber, The chainsmokers\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\",\"composedBy\":\"Moroon 5\",\"time\":\"2:18\"},\n        {\"name\":\"Fuck You\",\"cover\":\"./img/covers/id-5.png\",\"composedBy\":\"Cardi B, Selena Gomez, Ozuna\",\"time\":\"5:29\"},\n        {\"name\":\"Burn It Slow\",\"cover\":\"./img/covers/id-8.jpg\",\"composedBy\":\"Ed Sheeran & Bieber's\",\"time\":\"3:49\"},\n        {\"name\":\"Still You\",\"cover\":\"./img/covers/id-9.png\",\"composedBy\":\"Alan Walker\",\"time\":\"4:22\"},\n        {\"name\":\"Let Me Down\",\"cover\":\"./img/covers/id-10.png\",\"composedBy\":\"Ariana Grande\",\"time\":\"2:18\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"}\n      ],\n      newReleaseSongs: [\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-5.png\",\"composedBy\":\"Jonas Brothers\",\"time\":\"4:22\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-7.png\",\"time\":\"2:18\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-8.jpg\",\"composedBy\":\"Alan Walker\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-9.png\",\"composedBy\":\"The chainsmokers\",\"time\":\"3:49\"},\n        {\"name\":\"Smash It!\",\"cover\":\"./img/covers/id-10.png\",\"composedBy\":\"Justin Bieber, The chainsmokers\",\"time\":\"4:50\"},\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\",\"composedBy\":\"Moroon 5\",\"time\":\"4:19\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\",\"composedBy\":\"Cardi B, Selena Gomez, Ozuna\",\"time\":\"3:49\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\",\"composedBy\":\"Ed Sheeran & Bieber's\",\"time\":\"5:29\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\",\"composedBy\":\"Ava Max\",\"time\":\"4:50\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\",\"composedBy\":\"Ariana Grande\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\",\"composedBy\":\"Bebe Rexha\",\"time\":\"4:22\"}\n      ]\n    }\n  }\n  componentDidMount=()=>{\n  }\n  goToTrackList=()=>{\n    this.props.history.push('/track-list')\n  }\n  \n  render() {\n    const {favouriteSongs, newReleaseSongs} = this.state;\n    const params = {\n      slidesPerView: '3',\n      centeredSlides: false,\n      loop: false,\n      lazy: true,\n      spaceBetween: 70,\n      shouldSwiperUpdate: true,\n      freeMode: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    const params1 = {\n      slidesPerView: '2',\n      centeredSlides: false,\n      effect: 'slide',\n      loop: false,\n      lazy: true,\n      spaceBetween: 20,\n      shouldSwiperUpdate: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    return (\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"body-wrapper delay-page-load\">\n              <div className=\"browse-header playlists-header\">\n                <p>Your music zone</p>\n                <h3>My Playlists</h3>\n              </div>\n              <div className=\"bowse-body\">\n                <div className=\"playlists-top-list\">\n                  <div className=\"playlists-top-list-img\" onClick={this.goToTrackList}>\n                    <img src={newReleaseSongs[4].cover} className=\"img-reponsive\" />\n                  </div>\n                  <div className=\"playlists-top-list-info\">\n                    <h4>Favourites</h4>\n                    <p>32 songs</p>\n                    <span>Updated 2 days ago</span>\n                    <div className=\"playlists-top-list-info-actions\">\n                      <div className=\"playlists-top-list-info-actions-play\" onClick={this.goToTrackList}>\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={12}\n                          height={12}\n                          viewBox=\"0 0 20 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-play\"\n                        >\n                          <polygon points=\"5 3 19 12 5 21 5 3\" />\n                        </svg>\n                      </div>\n                      <div className=\"playlists-top-list-info-more\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={20}\n                          height={20}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-more-vertical\"\n                        >\n                          <circle cx={12} cy={12} r={1} />\n                          <circle cx={12} cy={5} r={1} />\n                          <circle cx={12} cy={19} r={1} />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"playlists-create\">\n                  <div className=\"playlists-create-icon\">\n                    <div>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={28}\n                        height={26}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2.5}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-plus\"\n                      >\n                        <line x1={12} y1={5} x2={12} y2={19} />\n                        <line x1={5} y1={12} x2={19} y2={12} />\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"playlists-create-title\">\n                    <p>Create a new playlist</p>\n                    <span>Click to add</span>\n                  </div>\n                </div>\n                <div className=\"section-wrap\">\n                  <div className=\"section-header playlists-all-header\">\n                    <p>Created Playlists</p>\n                  </div>\n                  <div className=\"section-body\">\n                    <div className=\"playlists-all\">\n                      { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                        return (\n                          <div key={index+1} onClick={this.goToTrackList}>\n                            <div className=\"playlist-all-list\">\n                              <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                              <div className=\"playlist-all-list-overly\">\n                                <p>{song.name}</p>\n                                <span>\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={16}\n                                    height={16}\n                                    viewBox=\"0 0 24 18\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2.5}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-bar-chart-2\"\n                                  >\n                                    <line x1={18} y1={20} x2={18} y2={10} />\n                                    <line x1={12} y1={20} x2={12} y2={4} />\n                                    <line x1={6} y1={20} x2={6} y2={14} />\n                                  </svg>\n                                </span>\n                                <span> 32 songs</span>\n                              </div>\n                            </div>\n                          </div>\n                        )})\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"section-wrap\">\n                  <div className=\"section-header\">\n                    <p>Trending Songs</p>\n                    <span>View all</span>\n                  </div>\n                  <div className=\"section-body\">\n                    <Swiper {...params}>\n                      { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                        return (\n                          <div  key={index+3}>\n                            <div className=\"section-body-card\">\n                              <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                            </div>\n                            <span className=\"section-body-card-title\">{song.name}</span>\n                          </div>\n                        )})\n                      }\n                    </Swiper>\n                  </div>\n                </div><br />\n                <div className=\"section-wrap\">\n                  <div className=\"section-header\">\n                    <p>Popular Artists</p>\n                    <span>View all</span>\n                  </div>\n                  <div className=\"section-body\">\n                    <Swiper {...params}>\n                      { favouriteSongs.slice(0).reverse().map((song,index)=>{\n                        return (\n                          <div key={index+4}>\n                            <div className=\"section-body-round-card\">\n                              <img src={song.cover} alt=\"song\" className=\"swiper-lazy\" />\n                            </div>\n                            <span className=\"section-body-round-card-title\">{song.name}</span>\n                          </div>\n                        )})\n                      }\n                    </Swiper>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Playlists;","import React, { Component } from \"react\";\nimport './TrackList.css';\nimport Swiper from 'react-id-swiper';\nimport 'react-id-swiper/lib/styles/css/swiper.css';\nimport '../../assets/fonts/gotham-rounded/style.css'\nclass TrackList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favouriteSongs : [\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\",\"composedBy\":\"Imagine Dragons\",\"time\":\"3:30\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\",\"composedBy\":\"Jonas Brothers\",\"time\":\"3:49\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\",\"composedBy\":\"Alan Walker\",\"time\":\"4:22\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\",\"composedBy\":\"The chainsmokers\",\"time\":\"4:50\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\",\"composedBy\":\"Justin Bieber, The chainsmokers\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\",\"composedBy\":\"Moroon 5\",\"time\":\"2:18\"},\n        {\"name\":\"Fuck You\",\"cover\":\"./img/covers/id-5.png\",\"composedBy\":\"Cardi B, Selena Gomez, Ozuna\",\"time\":\"5:29\"},\n        {\"name\":\"Great Work\",\"cover\":\"./img/covers/id-7.png\",\"composedBy\":\"Ava Max\",\"time\":\"4:50\"},\n        {\"name\":\"Burn It Slow\",\"cover\":\"./img/covers/id-8.jpg\",\"composedBy\":\"Ed Sheeran & Bieber's\",\"time\":\"3:49\"},\n        {\"name\":\"Still You\",\"cover\":\"./img/covers/id-9.png\",\"composedBy\":\"Alan Walker\",\"time\":\"4:22\"},\n        {\"name\":\"Let Me Down\",\"cover\":\"./img/covers/id-10.png\",\"composedBy\":\"Ariana Grande\",\"time\":\"2:18\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"}\n      ],\n      newReleaseSongs: [\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-5.png\",\"composedBy\":\"Jonas Brothers\",\"time\":\"4:22\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-7.png\",\"time\":\"2:18\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-8.jpg\",\"composedBy\":\"Alan Walker\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-9.png\",\"composedBy\":\"The chainsmokers\",\"time\":\"3:49\"},\n        {\"name\":\"Smash It!\",\"cover\":\"./img/covers/id-10.png\",\"composedBy\":\"Justin Bieber, The chainsmokers\",\"time\":\"4:50\"},\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\",\"composedBy\":\"Moroon 5\",\"time\":\"4:19\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\",\"composedBy\":\"Cardi B, Selena Gomez, Ozuna\",\"time\":\"3:49\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\",\"composedBy\":\"Ed Sheeran & Bieber's\",\"time\":\"5:29\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\",\"composedBy\":\"Ava Max\",\"time\":\"4:50\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\",\"composedBy\":\"Ariana Grande\",\"time\":\"3:30\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\",\"composedBy\":\"Bebe Rexha\",\"time\":\"4:22\"}\n      ]\n    }\n  }\n  componentDidMount=()=>{\n  }\n  goToPlayer=()=>{\n    this.props.history.push('/player')\n  }\n  render() {\n    const {favouriteSongs, newReleaseSongs} = this.state;\n    const params = {\n      slidesPerView: '3',\n      centeredSlides: false,\n      loop: false,\n      lazy: true,\n      spaceBetween: 70,\n      shouldSwiperUpdate: true,\n      freeMode: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    const params1 = {\n      slidesPerView: '2',\n      centeredSlides: false,\n      effect: 'slide',\n      loop: false,\n      lazy: true,\n      spaceBetween: 20,\n      shouldSwiperUpdate: true,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    return (\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"body-wrapper delay-page-load\">\n              <div className=\"bowse-body track-list\">\n                <div className=\"track-list-header\">\n                  <div className=\"track-list-header-img\">\n                    <img src={favouriteSongs[2].cover} className=\"img-responsive\" />\n                  </div>\n                  <div className=\"track-list-header-info\">\n                    <h4>Weekly Top Songs</h4>\n                    <p>32 Songs <span> 211k Favourites</span></p>\n                  </div>\n                  <div className=\"\">\n                    <div className=\"track-list-header-info-play\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={12}\n                        height={12}\n                        viewBox=\"0 0 20 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-play\"\n                      >\n                        <polygon points=\"5 3 19 12 5 21 5 3\" />\n                      </svg>\n                    </div>\n                    <div className=\"track-list-header-info-fav\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={12}\n                        height={12}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2.5}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-heart\"\n                      >\n                        <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"browse-body-hot-songs\">\n                  {/* <div className=\"browse-body-hot-songs-title\">\n                    <span>Hot Songs</span>\n                    <span style={{color:'#e78783',fontSize:14}}>See All</span>\n                  </div> */}\n                  <div className=\"browse-body-hot-songs-box\">\n                    {favouriteSongs.length>0 && favouriteSongs.map((song,index)=>{\n                      return(<div className=\"browse-body-hot-song-wrap\" key={index} style={{animation:'none'}} onClick={this.goToPlayer}>\n                        <div className=\"browse-body-hot-song-body-img\">\n                          <img src={song.cover} alt={song.name} />\n                        </div>\n                        <div className=\"browse-body-hot-song-body\">\n                          <div>\n                            <p>\n                              {song.name}\n                            </p>\n                            <span>\n                              {song.composedBy}\n                            </span>\n                          </div>\n                          <p className=\"browse-body-hot-song-body-song-time\">\n                            {song.time}\n                          </p>\n                        </div>\n                      </div>)\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\n// *******************************************************\n// RAIL\n// *******************************************************\nconst railOuterStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 42,\n  transform: 'translate(0%, -50%)',\n  borderRadius: 7,\n  cursor: 'pointer',\n  // border: '1px solid white',\n}\n\nconst railInnerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 5,\n  transform: 'translate(0%, -50%)',\n  borderRadius: 7,\n  pointerEvents: 'none',\n  backgroundColor: 'rgb(155,155,155)',\n}\n\nexport function SliderRail({ getRailProps }) {\n  return (\n    <Fragment>\n      <div style={railOuterStyle} {...getRailProps()} />\n      <div style={railInnerStyle} />\n    </Fragment>\n  )\n}\n\nSliderRail.propTypes = {\n  getRailProps: PropTypes.func.isRequired,\n}\n\n// *******************************************************\n// HANDLE COMPONENT\n// *******************************************************\nexport function Handle({\n  domain: [min, max],\n  handle: { id, value, percent },\n  disabled,\n  getHandleProps,\n}) {\n  return (\n    <Fragment>\n      <div\n        style={{\n          left: `${percent}%`,\n          position: 'absolute',\n          transform: 'translate(-50%, -50%)',\n          WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n          zIndex: 5,\n          width: 28,\n          height: 42,\n          cursor: 'pointer',\n          // border: '1px solid white',\n          backgroundColor: 'none',\n        }}\n        {...getHandleProps(id)}\n      />\n      <div\n        role=\"slider\"\n        aria-valuemin={min}\n        aria-valuemax={max}\n        aria-valuenow={value}\n        style={{\n          left: `${percent}%`,\n          position: 'absolute',\n          transform: 'translate(-50%, -50%)',\n          zIndex: 2,\n          width: 24,\n          height: 24,\n          borderRadius: '50%',\n          boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\n          backgroundColor: disabled ? '#666' : '#ffc400',\n        }}\n      />\n    </Fragment>\n  )\n}\n\nHandle.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired,\n  }).isRequired,\n  getHandleProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n}\n\nHandle.defaultProps = {\n  disabled: false,\n}\n\n// *******************************************************\n// KEYBOARD HANDLE COMPONENT\n// Uses a button to allow keyboard events\n// *******************************************************\nexport function KeyboardHandle({\n  domain: [min, max],\n  handle: { id, value, percent },\n  disabled,\n  getHandleProps,\n}) {\n  return (\n    <button\n      role=\"slider\"\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={value}\n      style={{\n        left: `${percent}%`,\n        position: 'absolute',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 2,\n        width: 24,\n        height: 24,\n        borderRadius: '50%',\n        boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\n        backgroundColor: disabled ? '#666' : '#ffc400',\n      }}\n      {...getHandleProps(id)}\n    />\n  )\n}\n\nKeyboardHandle.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired,\n  }).isRequired,\n  getHandleProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n}\n\nKeyboardHandle.defaultProps = {\n  disabled: false,\n}\n\n// *******************************************************\n// TRACK COMPONENT\n// *******************************************************\nexport function Track({ source, target, getTrackProps, disabled }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        transform: 'translate(0%, -50%)',\n        height: 5,\n        zIndex: 1,\n        backgroundColor: disabled ? '#999' : '#b28900',\n        borderRadius: 7,\n        cursor: 'pointer',\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`,\n      }}\n      {...getTrackProps()}\n    />\n  )\n}\n\nTrack.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired,\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired,\n  }).isRequired,\n  getTrackProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n}\n\nTrack.defaultProps = {\n  disabled: false,\n}\n\n// *******************************************************\n// TICK COMPONENT\n// *******************************************************\nexport function Tick({ tick, count, format }) {\n  return (\n    <div>\n      <div\n        style={{\n          position: 'absolute',\n          marginTop: 5,\n          width: 1,\n          height: 5,\n          backgroundColor: 'rgb(200,200,200)',\n          left: `${tick.percent}%`,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          marginTop: 22,\n          fontSize: 10,\n          textAlign: 'center',\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`,\n        }}\n      >\n        {format(tick.value)}\n      </div>\n    </div>\n  )\n}\n\nTick.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired,\n  }).isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired,\n}\n\nTick.defaultProps = {\n  format: d => d,\n}","import React, { Component } from \"react\";\nimport './Player.css';\nimport Swiper from 'react-id-swiper';\nimport 'react-id-swiper/lib/styles/css/swiper.css';\nimport '../../assets/fonts/gotham-rounded/style.css';\nimport 'rc-slider/assets/index.css';\n// import { Slider, Rail, Handles, Tracks } from 'react-compound-slider';\nimport Slider, { Range } from 'rc-slider';\nimport Sound from 'react-sound';\nimport { SliderRail, Handle, Track } from './RangeSlider';\nconst handle = (props) => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    \n      <Handle value={value} {...restProps} />\n  );\n};\nconst sliderStyle = {\n  position: 'relative',\n  width: '100%',\n  touchAction: 'none',\n}\nvar song1 = './Benny_Blanco__J_Balvin__Tainy_-_I_cant_get_enough_(iringtone.net).mp3'\nconst domain = [1, 45]\nconst defaultValues = [1]\nvar swiper;\nclass Player extends Component {\n  constructor() {\n    super();\n    this.state = {\n      values: defaultValues.slice(),\n    update: defaultValues.slice(),\n      favouriteSongs : [\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\"},\n        {\"name\":\"Fuck You\",\"cover\":\"./img/covers/id-5.png\"},\n        {\"name\":\"Great Work\",\"cover\":\"./img/covers/id-7.png\"},\n        {\"name\":\"Burn It Slow\",\"cover\":\"./img/covers/id-8.jpg\"},\n        {\"name\":\"Still You\",\"cover\":\"./img/covers/id-9.png\"},\n        {\"name\":\"Let Me Down\",\"cover\":\"./img/covers/id-10.png\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"},\n        // {\"name\":\"\",\"cover\":\"./img/covers/\"}\n      ],\n      newReleaseSongs: [\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-5.png\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-7.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-8.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-9.png\"},\n        {\"name\":\"Smash It!\",\"cover\":\"./img/covers/id-10.png\"},\n        {\"name\":\"Believer\",\"cover\":\"./img/covers/believer.jpg\"},\n        {\"name\":\"Friction\",\"cover\":\"./img/covers/friction.jpeg\"},\n        {\"name\":\"Loved By\",\"cover\":\"./img/covers/id-1.jpg\"},\n        {\"name\":\"I Don't Care\",\"cover\":\"./img/covers/id-2.png\"},\n        {\"name\":\"Goodbyes\",\"cover\":\"./img/covers/id-3.jpg\"},\n        {\"name\":\"ME!\",\"cover\":\"./img/covers/id-4.jpg\"}\n      ],\n      activeSlideKey:1,\n      playStatus: Sound.status.STOPPED,\n      elapsed: '00:00',\n      total: '00:00',\n      position: 0,\n      playFromPosition: 0,\n      actualPosition:0\n    }\n  }\n  componentDidMount=()=>{\n  }\n  handleSongLoad=(loaded)=>{\n    console.log(\"loaded\",loaded)\n    loaded.setAutoPlay(true)\n  }\n  handleSongPlaying(audio) {\n    this.setState({ position: audio.position,actualPosition:audio.position, elapsed: this.formatMilliseconds(audio.position),\n    total: this.formatMilliseconds(audio.duration),values:[audio.position/1000] })\n    //console.log(\"saskj\",audio);\n  }\n  formatMilliseconds(milliseconds) {\n    // Format hours\n    var hours = Math.floor(milliseconds / 3600000);\n    milliseconds = milliseconds % 3600000;\n\n    // Format minutes\n    var minutes = Math.floor(milliseconds / 60000);\n    milliseconds = milliseconds % 60000;\n\n    // Format seconds\n    var seconds = Math.floor(milliseconds / 1000);\n    milliseconds = Math.floor(milliseconds % 1000);\n\n    // Return as string\n    return (minutes < 10 ? '0' : '') + minutes + ':' +\n    (seconds < 10 ? '0' : '') + seconds;\n  }\n  togglePlay=()=>{\n    // Check current playing state\n    if(this.state.playStatus === Sound.status.PLAYING){\n      // Pause if playing\n      this.setState({playStatus: Sound.status.PAUSED})\n    } else {\n      // Resume if paused\n      this.setState({playStatus: Sound.status.PLAYING})\n    }\n  }\n\n  forward=()=>{\n    this.setState({position: this.state.position+=1000*10});\n  }\n\n  backward=()=>{\n    this.setState({position: this.state.position-=1000*10});\n  }\n\n  handleSongFinished () {\n   console.log(\"song finished\");\n   this.setState({playStatus: Sound.status.STOPPED})\n  }\n\n  setPosition = (values)=>{\n    this.setState({position:values*1000})\n  }\n  getSwiper=(mySwiper)=>{\n    if(mySwiper){\n      swiper=mySwiper;\n      console.log(\"swiper\",mySwiper.activeIndex);\n      // this.setState({activeSlideKey:mySwiper.activeIndex})\n      this.setState({playStatus:Sound.status.STOPPED})\n    }\n  }\n  slideMove=(mySwiper)=>{\n    if(mySwiper){\n      swiper=mySwiper;\n      console.log(\"swiper\",mySwiper);\n      // this.setState({activeSlideKey:mySwiper.activeIndex})\n      this.setState({playStatus:Sound.status.STOPPED})\n      swiper.slideNext();\n    }\n  }\n  render() {\n    const {favouriteSongs, newReleaseSongs,values, update, activeSlideKey} = this.state;\n    const params = {\n      on: {\n        'init': () => {},\n        'slideChange': () => {console.log(\"changed\");\n        var temp = activeSlideKey+1\n        this.getSwiper(swiper)\n        },\n        'touchEnd': () => {console.log(\"complete\");\n        this.slideMove(swiper)\n        }\n      },\n      slidesPerView: 1,\n      centeredSlides: true,\n      containerClass:\"player-body-card-wrapper\",\n      slideClass:\"player-body-card-slide-class\",\n      slideActiveClass:'player-body-card-active',\n      activeSlideKey:this.activeSlideKey,\n      watchOverflow: true,\n      shouldSwiperUpdate:true,\n      rebuildOnUpdate:false,\n      loop: true,\n      spaceBetween: 0,\n      navigation: {\n        nextEl: '.reviews__slider__nav--next',\n        prevEl: '.reviews__slider__nav--prev'\n      },\n      renderPrevButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--prev\" style={{display:'none'}} href=\"/home\">prev</a>\n      ),\n      renderNextButton: () => (\n        <a className=\"reviews__slider__nav reviews__slider__nav--next\" style={{display:'none'}} href=\"/home\">next</a>\n      )\n    }\n    return (\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"body-wrapper delay-page-load\">\n              <div className=\"section-wrap\">\n                <div className=\"player-header\">\n                  <h4>Don't Let Me Down</h4>\n                  <p>Justine Bieber</p>\n                </div>\n                <div className=\"player-body\">\n                  <Swiper {...params} >\n                    { favouriteSongs.map((song,index)=>{\n                      return (\n                        <div  key={index+1} onChange={this.abc}>\n                          <div className=\"player-body-card\">\n                            <img src={song.cover} alt=\"song\" />\n                          </div>\n                        </div>\n                      )})\n                    }\n                  </Swiper>\n                </div>\n                <div className=\"player-handles\">\n                  <Sound\n                    url={song1}\n                    autoLoad={true}\n                    playStatus={this.state.playStatus}\n                    onPlaying={this.handleSongPlaying.bind(this)}\n                    position={this.state.position}\n                    onFinishedPlaying={this.handleSongFinished.bind(this)}\n                    onLoad = {this.handleSongLoad}\n                  />\n                  <div className=\"player-handles-props\">\n                    <span>{this.state.elapsed}</span>\n                      <div style={{margin:'0 20px',width:'100%'}}>\n                      <Slider\n                        min={0}\n                        max={40}\n                        step={1}\n                        onUpdate={this.onUpdate}\n                        defaultValue={this.state.position/1000}\n                        value={this.state.position/1000}\n                        onChange={this.setPosition}\n                        trackStyle={{backgroundColor:'rgb(22, 31, 79)'}}\n                        handleStyle={[{backgroundColor:'rgb(22, 31, 79)',border:'rgb(22, 31, 79)',boxShadow:'0 0 5px rgb(22, 31, 79)'}]}\n                      >\n                        {/* <Rail>\n                          {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\n                        </Rail>\n                        <Handles>\n                          {({ handles, getHandleProps }) => (\n                            <div className=\"slider-handles\">\n                              {handles.map(handle => (\n                                <Handle\n                                  key={handle.id}\n                                  handle={handle}\n                                  domain={domain}\n                                  getHandleProps={getHandleProps}\n                                />\n                              ))}\n                            </div>\n                          )}\n                        </Handles>\n                        <Tracks right={false}>\n                          {({ tracks, getTrackProps }) => (\n                            <div className=\"slider-tracks\">\n                              {tracks.map(({ id, source, target }) => (\n                                <Track\n                                  key={id}\n                                  source={source}\n                                  target={target}\n                                  getTrackProps={getTrackProps}\n                                />\n                              ))}\n                            </div>\n                          )}\n                        </Tracks> */}\n                      </Slider>\n                      </div>\n                    <span>{this.state.total}</span>\n                  </div>\n                  <div className=\"player-handles-icons-wrap\">\n                    <div style={{transform:'rotate(-90deg)',color:'#161f4f',cursor:'pointer'}} onChange={this.backward}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"#161f4f\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-triangle\"\n                      >\n                        <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\" />\n                      </svg>\n                    </div>\n                    <div className=\"playlists-top-list-info-actions-play\" onClick={this.togglePlay} style={{marginRight:0,transform: 'scale(2)',backgroundColor:'#161f4f'}}>\n                      {this.state.playStatus === Sound.status.PLAYING ?\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={142}\n                        height={16}\n                        viewBox=\"0 0 23 25\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={0}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-pause\"\n                        style={{fill:'#ffffff',color:'#ffffff'}}\n                      >\n                        <rect x={6} y={4} width={4} height={16} />\n                        <rect x={14} y={4} width={4} height={16} />\n                      </svg>:\n                      <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={14}\n                      height={14}\n                      viewBox=\"0 0 20 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-play\"\n                      style={{fill:'#ffffff',color:'#ffffff'}}\n                    >\n                      <polygon points=\"5 3 19 12 5 21 5 3\" />\n                    </svg>}\n                    </div>\n                    <div style={{transform:'rotate(90deg)',color:'#161f4f',cursor:'pointer'}} onChange={this.forward}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"#161f4f\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-triangle\"\n                      >\n                        <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Player;","import React, { Component } from \"react\";\nimport './App.css';\nimport { HashRouter as Router, Route,Switch} from \"react-router-dom\";\nimport Home from './components/Home';\nimport  Browse from './components/Browse';\nimport Navbar from './components/Navbar';\nimport Playlists from './components/Playlists';\nimport TrackList from './components/TrackList';\nimport Player from './components/Player';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nightTheme: false\n    }\n  }\n  toggleTheme=()=>{\n    this.setState({nightTheme:!this.state.nightTheme},()=>{\n      console.log(\"night theme\",this.state.nightTheme)\n    })\n    if(!this.state.nightTheme){\n      document.body.setAttribute('data-theme', 'dark')\n    } else {\n      document.body.removeAttribute('data-theme')\n    }\n  }\n  render() {\n    const {nightTheme} = this.state\n    return (\n      <Router>\n        <div>\n          <div className=\"sidebar-menu\">\n            <span>\n              <svg\n                height=\"50px\"\n                width=\"50px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 188.7 123\"\n                className=\"sidebar-menu-icon\"\n              >\n                <path\n                  d=\"M133.9,38.3H54.8c-3,0-5.4-2.4-5.4-5.4v0c0-3,2.4-5.4,5.4-5.4l79.1,0c3,0,5.4,2.4,5.4,5.4v0  C139.4,35.9,136.9,38.3,133.9,38.3z\"\n                />\n                <path\n                  d=\"M93.1,66.5H54.8c-3,0-5.4-2.4-5.4-5.4v0c0-3,2.4-5.4,5.4-5.4h38.3c3,0,5.4,2.4,5.4,5.4v0  C98.6,64,96.2,66.5,93.1,66.5z\"\n                />\n                <path\n                  d=\"M113.1,94.3H54.8c-3,0-5.4-2.4-5.4-5.4v0c0-3,2.4-5.4,5.4-5.4h58.2c3,0,5.4,2.4,5.4,5.4v0  C118.5,91.9,116.1,94.3,113.1,94.3z\"\n                />\n              </svg>\n            </span>\n            {/* <span>Home</span> */}\n            <div className=\"sidebar-menu-right-items\" id=\"themeSwitch\" onClick={this.toggleTheme}>\n              {nightTheme?<span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-sun\"\n                >\n                  <circle cx={12} cy={12} r={5} />\n                  <line x1={12} y1={1} x2={12} y2={3} />\n                  <line x1={12} y1={21} x2={12} y2={23} />\n                  <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n                  <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n                  <line x1={1} y1={12} x2={3} y2={12} />\n                  <line x1={21} y1={12} x2={23} y2={12} />\n                  <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n                  <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n                </svg>\n              </span>:\n              <span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-moon\"\n                >\n                  <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" />\n                </svg>\n              </span>}\n            </div>\n          </div>\n        </div>\n        <Route>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/track-list\" component={TrackList} />\n            <Route exact path=\"/favourite\" component={Browse} />\n            <Route exact path=\"/playlists\" component={Playlists} />\n            <Route exact path=\"/player\" component={Player} />\n            <Route exact path=\"/:section\" component={Home} />\n          </Switch>\n        </Route>\n        <Navbar />\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}